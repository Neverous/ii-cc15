; ModuleID = '2.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@main.data = private unnamed_addr constant [5 x i32] [i32 5, i32 3, i32 2, i32 1, i32 4], align 16
@.str = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

; Function Attrs: nounwind uwtable
define void @sort(i32* %p1, i32* %p2) #0 {
  %1 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %p = alloca i32*, align 8
  store i32* %p1, i32** %1, align 8
  store i32* %p2, i32** %2, align 8
  br label %3

; <label>:3                                       ; preds = %17, %0
  %4 = load i32*, i32** %1, align 8
  store i32* %4, i32** %p, align 8
  br label %5

; <label>:5                                       ; preds = %37, %3
  %6 = load i32*, i32** %p, align 8
  %7 = getelementptr inbounds i32, i32* %6, i64 1
  %8 = load i32*, i32** %2, align 8
  %9 = icmp ult i32* %7, %8
  br i1 %9, label %10, label %40

; <label>:10                                      ; preds = %5
  %11 = load i32*, i32** %p, align 8
  %12 = load i32, i32* %11, align 4
  %13 = load i32*, i32** %p, align 8
  %14 = getelementptr inbounds i32, i32* %13, i64 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp ugt i32 %12, %15
  br i1 %16, label %17, label %36

; <label>:17                                      ; preds = %10
  %18 = load i32*, i32** %p, align 8
  %19 = getelementptr inbounds i32, i32* %18, i64 1
  %20 = load i32, i32* %19, align 4
  %21 = load i32*, i32** %p, align 8
  %22 = load i32, i32* %21, align 4
  %23 = xor i32 %22, %20
  store i32 %23, i32* %21, align 4
  %24 = load i32*, i32** %p, align 8
  %25 = load i32, i32* %24, align 4
  %26 = load i32*, i32** %p, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 1
  %28 = load i32, i32* %27, align 4
  %29 = xor i32 %28, %25
  store i32 %29, i32* %27, align 4
  %30 = load i32*, i32** %p, align 8
  %31 = getelementptr inbounds i32, i32* %30, i64 1
  %32 = load i32, i32* %31, align 4
  %33 = load i32*, i32** %p, align 8
  %34 = load i32, i32* %33, align 4
  %35 = xor i32 %34, %32
  store i32 %35, i32* %33, align 4
  br label %3

; <label>:36                                      ; preds = %10
  br label %37

; <label>:37                                      ; preds = %36
  %38 = load i32*, i32** %p, align 8
  %39 = getelementptr inbounds i32, i32* %38, i32 1
  store i32* %39, i32** %p, align 8
  br label %5

; <label>:40                                      ; preds = %5
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @main() #0 {
  %1 = alloca i32, align 4
  %data = alloca [5 x i32], align 16
  %d = alloca i64, align 8
  store i32 0, i32* %1
  %2 = bitcast [5 x i32]* %data to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* bitcast ([5 x i32]* @main.data to i8*), i64 20, i32 16, i1 false)
  %3 = getelementptr inbounds [5 x i32], [5 x i32]* %data, i32 0, i32 0
  %4 = getelementptr inbounds [5 x i32], [5 x i32]* %data, i32 0, i32 0
  %5 = getelementptr inbounds i32, i32* %4, i64 5
  call void @sort(i32* %3, i32* %5)
  store i64 0, i64* %d, align 8
  br label %6

; <label>:6                                       ; preds = %14, %0
  %7 = load i64, i64* %d, align 8
  %8 = icmp ult i64 %7, 5
  br i1 %8, label %9, label %17

; <label>:9                                       ; preds = %6
  %10 = load i64, i64* %d, align 8
  %11 = getelementptr inbounds [5 x i32], [5 x i32]* %data, i32 0, i64 %10
  %12 = load i32, i32* %11, align 4
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 %12)
  br label %14

; <label>:14                                      ; preds = %9
  %15 = load i64, i64* %d, align 8
  %16 = add i64 %15, 1
  store i64 %16, i64* %d, align 8
  br label %6

; <label>:17                                      ; preds = %6
  %18 = call i32 @puts(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i32 0, i32 0))
  ret i32 0
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

declare i32 @printf(i8*, ...) #2

declare i32 @puts(i8*) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
