; ModuleID = '4.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.tree = type { double, double, %struct.tree*, %struct.tree* }

@test = common global %struct.tree* null, align 8
@.str = private unnamed_addr constant [7 x i8] c"%.2lf\0A\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"%ld\0A\00", align 1

; Function Attrs: nounwind uwtable
define double* @find(double %x, %struct.tree* %t) #0 {
  %1 = alloca double*, align 8
  %2 = alloca double, align 8
  %3 = alloca %struct.tree*, align 8
  store double %x, double* %2, align 8
  store %struct.tree* %t, %struct.tree** %3, align 8
  br label %4

; <label>:4                                       ; preds = %29, %0
  %5 = load %struct.tree*, %struct.tree** %3, align 8
  %6 = icmp ne %struct.tree* %5, null
  br i1 %6, label %7, label %30

; <label>:7                                       ; preds = %4
  %8 = load %struct.tree*, %struct.tree** %3, align 8
  %9 = getelementptr inbounds %struct.tree, %struct.tree* %8, i32 0, i32 0
  %10 = load double, double* %9, align 8
  %11 = load double, double* %2, align 8
  %12 = fcmp olt double %10, %11
  br i1 %12, label %13, label %17

; <label>:13                                      ; preds = %7
  %14 = load %struct.tree*, %struct.tree** %3, align 8
  %15 = getelementptr inbounds %struct.tree, %struct.tree* %14, i32 0, i32 3
  %16 = load %struct.tree*, %struct.tree** %15, align 8
  store %struct.tree* %16, %struct.tree** %3, align 8
  br label %29

; <label>:17                                      ; preds = %7
  %18 = load %struct.tree*, %struct.tree** %3, align 8
  %19 = getelementptr inbounds %struct.tree, %struct.tree* %18, i32 0, i32 0
  %20 = load double, double* %19, align 8
  %21 = load double, double* %2, align 8
  %22 = fcmp ogt double %20, %21
  br i1 %22, label %23, label %27

; <label>:23                                      ; preds = %17
  %24 = load %struct.tree*, %struct.tree** %3, align 8
  %25 = getelementptr inbounds %struct.tree, %struct.tree* %24, i32 0, i32 2
  %26 = load %struct.tree*, %struct.tree** %25, align 8
  store %struct.tree* %26, %struct.tree** %3, align 8
  br label %28

; <label>:27                                      ; preds = %17
  br label %30

; <label>:28                                      ; preds = %23
  br label %29

; <label>:29                                      ; preds = %28, %13
  br label %4

; <label>:30                                      ; preds = %27, %4
  %31 = load %struct.tree*, %struct.tree** %3, align 8
  %32 = icmp ne %struct.tree* %31, null
  br i1 %32, label %33, label %36

; <label>:33                                      ; preds = %30
  %34 = load %struct.tree*, %struct.tree** %3, align 8
  %35 = getelementptr inbounds %struct.tree, %struct.tree* %34, i32 0, i32 1
  store double* %35, double** %1
  br label %37

; <label>:36                                      ; preds = %30
  store double* null, double** %1
  br label %37

; <label>:37                                      ; preds = %36, %33
  %38 = load double*, double** %1
  ret double* %38
}

; Function Attrs: nounwind uwtable
define i32 @main() #0 {
  %1 = alloca i32, align 4
  store i32 0, i32* %1
  %2 = call noalias i8* @malloc(i64 32) #3
  %3 = bitcast i8* %2 to %struct.tree*
  store %struct.tree* %3, %struct.tree** @test, align 8
  %4 = load %struct.tree*, %struct.tree** @test, align 8
  %5 = getelementptr inbounds %struct.tree, %struct.tree* %4, i32 0, i32 0
  store double 1.000000e+00, double* %5, align 8
  %6 = load %struct.tree*, %struct.tree** @test, align 8
  %7 = getelementptr inbounds %struct.tree, %struct.tree* %6, i32 0, i32 1
  store double 1.000000e+00, double* %7, align 8
  %8 = call noalias i8* @malloc(i64 32) #3
  %9 = bitcast i8* %8 to %struct.tree*
  %10 = load %struct.tree*, %struct.tree** @test, align 8
  %11 = getelementptr inbounds %struct.tree, %struct.tree* %10, i32 0, i32 2
  store %struct.tree* %9, %struct.tree** %11, align 8
  %12 = call noalias i8* @malloc(i64 32) #3
  %13 = bitcast i8* %12 to %struct.tree*
  %14 = load %struct.tree*, %struct.tree** @test, align 8
  %15 = getelementptr inbounds %struct.tree, %struct.tree* %14, i32 0, i32 3
  store %struct.tree* %13, %struct.tree** %15, align 8
  %16 = load %struct.tree*, %struct.tree** @test, align 8
  %17 = getelementptr inbounds %struct.tree, %struct.tree* %16, i32 0, i32 2
  %18 = load %struct.tree*, %struct.tree** %17, align 8
  %19 = getelementptr inbounds %struct.tree, %struct.tree* %18, i32 0, i32 0
  store double 0.000000e+00, double* %19, align 8
  %20 = load %struct.tree*, %struct.tree** @test, align 8
  %21 = getelementptr inbounds %struct.tree, %struct.tree* %20, i32 0, i32 2
  %22 = load %struct.tree*, %struct.tree** %21, align 8
  %23 = getelementptr inbounds %struct.tree, %struct.tree* %22, i32 0, i32 1
  store double 0.000000e+00, double* %23, align 8
  %24 = load %struct.tree*, %struct.tree** @test, align 8
  %25 = getelementptr inbounds %struct.tree, %struct.tree* %24, i32 0, i32 2
  %26 = load %struct.tree*, %struct.tree** %25, align 8
  %27 = getelementptr inbounds %struct.tree, %struct.tree* %26, i32 0, i32 2
  store %struct.tree* null, %struct.tree** %27, align 8
  %28 = load %struct.tree*, %struct.tree** @test, align 8
  %29 = getelementptr inbounds %struct.tree, %struct.tree* %28, i32 0, i32 2
  %30 = load %struct.tree*, %struct.tree** %29, align 8
  %31 = getelementptr inbounds %struct.tree, %struct.tree* %30, i32 0, i32 3
  store %struct.tree* null, %struct.tree** %31, align 8
  %32 = load %struct.tree*, %struct.tree** @test, align 8
  %33 = getelementptr inbounds %struct.tree, %struct.tree* %32, i32 0, i32 3
  %34 = load %struct.tree*, %struct.tree** %33, align 8
  %35 = getelementptr inbounds %struct.tree, %struct.tree* %34, i32 0, i32 0
  store double 2.000000e+00, double* %35, align 8
  %36 = load %struct.tree*, %struct.tree** @test, align 8
  %37 = getelementptr inbounds %struct.tree, %struct.tree* %36, i32 0, i32 3
  %38 = load %struct.tree*, %struct.tree** %37, align 8
  %39 = getelementptr inbounds %struct.tree, %struct.tree* %38, i32 0, i32 1
  store double 2.000000e+00, double* %39, align 8
  %40 = load %struct.tree*, %struct.tree** @test, align 8
  %41 = getelementptr inbounds %struct.tree, %struct.tree* %40, i32 0, i32 3
  %42 = load %struct.tree*, %struct.tree** %41, align 8
  %43 = getelementptr inbounds %struct.tree, %struct.tree* %42, i32 0, i32 2
  store %struct.tree* null, %struct.tree** %43, align 8
  %44 = load %struct.tree*, %struct.tree** @test, align 8
  %45 = getelementptr inbounds %struct.tree, %struct.tree* %44, i32 0, i32 3
  %46 = load %struct.tree*, %struct.tree** %45, align 8
  %47 = getelementptr inbounds %struct.tree, %struct.tree* %46, i32 0, i32 3
  store %struct.tree* null, %struct.tree** %47, align 8
  %48 = load %struct.tree*, %struct.tree** @test, align 8
  %49 = call double* @find(double 0.000000e+00, %struct.tree* %48)
  %50 = load double, double* %49, align 8
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), double %50)
  %52 = load %struct.tree*, %struct.tree** @test, align 8
  %53 = call double* @find(double 1.000000e+00, %struct.tree* %52)
  %54 = load double, double* %53, align 8
  %55 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), double %54)
  %56 = load %struct.tree*, %struct.tree** @test, align 8
  %57 = call double* @find(double 2.000000e+00, %struct.tree* %56)
  %58 = load double, double* %57, align 8
  %59 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), double %58)
  %60 = load %struct.tree*, %struct.tree** @test, align 8
  %61 = call double* @find(double 7.000000e+00, %struct.tree* %60)
  %62 = ptrtoint double* %61 to i64
  %63 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i64 %62)
  ret i32 0
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #1

declare i32 @printf(i8*, ...) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
