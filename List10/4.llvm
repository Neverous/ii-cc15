; ModuleID = '4.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nounwind uwtable
define void @mult([3 x double]* %m1, [3 x double]* %m2, [3 x double]* %m3) #0 {
  %1 = alloca [3 x double]*, align 8
  %2 = alloca [3 x double]*, align 8
  %3 = alloca [3 x double]*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %i1 = alloca i32, align 4
  %j2 = alloca i32, align 4
  %k = alloca i32, align 4
  store [3 x double]* %m1, [3 x double]** %1, align 8
  store [3 x double]* %m2, [3 x double]** %2, align 8
  store [3 x double]* %m3, [3 x double]** %3, align 8
  store i32 0, i32* %i, align 4
  br label %4

; <label>:4                                       ; preds = %23, %0
  %5 = load i32, i32* %i, align 4
  %6 = icmp ult i32 %5, 3
  br i1 %6, label %7, label %26

; <label>:7                                       ; preds = %4
  store i32 0, i32* %j, align 4
  br label %8

; <label>:8                                       ; preds = %19, %7
  %9 = load i32, i32* %j, align 4
  %10 = icmp ult i32 %9, 3
  br i1 %10, label %11, label %22

; <label>:11                                      ; preds = %8
  %12 = load i32, i32* %j, align 4
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %i, align 4
  %15 = zext i32 %14 to i64
  %16 = load [3 x double]*, [3 x double]** %3, align 8
  %17 = getelementptr inbounds [3 x double], [3 x double]* %16, i64 %15
  %18 = getelementptr inbounds [3 x double], [3 x double]* %17, i32 0, i64 %13
  store double 0.000000e+00, double* %18, align 8
  br label %19

; <label>:19                                      ; preds = %11
  %20 = load i32, i32* %j, align 4
  %21 = add i32 %20, 1
  store i32 %21, i32* %j, align 4
  br label %8

; <label>:22                                      ; preds = %8
  br label %23

; <label>:23                                      ; preds = %22
  %24 = load i32, i32* %i, align 4
  %25 = add i32 %24, 1
  store i32 %25, i32* %i, align 4
  br label %4

; <label>:26                                      ; preds = %4
  store i32 0, i32* %i1, align 4
  br label %27

; <label>:27                                      ; preds = %73, %26
  %28 = load i32, i32* %i1, align 4
  %29 = icmp ult i32 %28, 3
  br i1 %29, label %30, label %76

; <label>:30                                      ; preds = %27
  store i32 0, i32* %j2, align 4
  br label %31

; <label>:31                                      ; preds = %69, %30
  %32 = load i32, i32* %j2, align 4
  %33 = icmp ult i32 %32, 3
  br i1 %33, label %34, label %72

; <label>:34                                      ; preds = %31
  store i32 0, i32* %k, align 4
  br label %35

; <label>:35                                      ; preds = %65, %34
  %36 = load i32, i32* %k, align 4
  %37 = icmp ult i32 %36, 3
  br i1 %37, label %38, label %68

; <label>:38                                      ; preds = %35
  %39 = load i32, i32* %j2, align 4
  %40 = zext i32 %39 to i64
  %41 = load i32, i32* %i1, align 4
  %42 = zext i32 %41 to i64
  %43 = load [3 x double]*, [3 x double]** %1, align 8
  %44 = getelementptr inbounds [3 x double], [3 x double]* %43, i64 %42
  %45 = getelementptr inbounds [3 x double], [3 x double]* %44, i32 0, i64 %40
  %46 = load double, double* %45, align 8
  %47 = load i32, i32* %k, align 4
  %48 = zext i32 %47 to i64
  %49 = load i32, i32* %j2, align 4
  %50 = zext i32 %49 to i64
  %51 = load [3 x double]*, [3 x double]** %2, align 8
  %52 = getelementptr inbounds [3 x double], [3 x double]* %51, i64 %50
  %53 = getelementptr inbounds [3 x double], [3 x double]* %52, i32 0, i64 %48
  %54 = load double, double* %53, align 8
  %55 = fadd double %46, %54
  %56 = load i32, i32* %k, align 4
  %57 = zext i32 %56 to i64
  %58 = load i32, i32* %i1, align 4
  %59 = zext i32 %58 to i64
  %60 = load [3 x double]*, [3 x double]** %3, align 8
  %61 = getelementptr inbounds [3 x double], [3 x double]* %60, i64 %59
  %62 = getelementptr inbounds [3 x double], [3 x double]* %61, i32 0, i64 %57
  %63 = load double, double* %62, align 8
  %64 = fadd double %63, %55
  store double %64, double* %62, align 8
  br label %65

; <label>:65                                      ; preds = %38
  %66 = load i32, i32* %k, align 4
  %67 = add i32 %66, 1
  store i32 %67, i32* %k, align 4
  br label %35

; <label>:68                                      ; preds = %35
  br label %69

; <label>:69                                      ; preds = %68
  %70 = load i32, i32* %j2, align 4
  %71 = add i32 %70, 1
  store i32 %71, i32* %j2, align 4
  br label %31

; <label>:72                                      ; preds = %31
  br label %73

; <label>:73                                      ; preds = %72
  %74 = load i32, i32* %i1, align 4
  %75 = add i32 %74, 1
  store i32 %75, i32* %i1, align 4
  br label %27

; <label>:76                                      ; preds = %27
  ret void
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.1 (tags/RELEASE_371/final)"}
