; ModuleID = '4.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nounwind uwtable
define void @mult([3 x double]* nocapture readonly %m1, [3 x double]* nocapture readonly %m2, [3 x double]* nocapture %m3) #0 {
.preheader4:
  %m318 = bitcast [3 x double]* %m3 to i8*
  call void @llvm.memset.p0i8.i64(i8* %m318, i8 0, i64 72, i32 8, i1 false)
  %0 = getelementptr inbounds [3 x double], [3 x double]* %m2, i64 0, i64 0
  %1 = getelementptr inbounds [3 x double], [3 x double]* %m2, i64 0, i64 1
  %2 = getelementptr inbounds [3 x double], [3 x double]* %m2, i64 0, i64 2
  %3 = getelementptr inbounds [3 x double], [3 x double]* %m2, i64 1, i64 0
  %4 = getelementptr inbounds [3 x double], [3 x double]* %m2, i64 1, i64 1
  %5 = getelementptr inbounds [3 x double], [3 x double]* %m2, i64 1, i64 2
  %6 = getelementptr inbounds [3 x double], [3 x double]* %m2, i64 2, i64 0
  %7 = getelementptr inbounds [3 x double], [3 x double]* %m2, i64 2, i64 1
  %8 = getelementptr inbounds [3 x double], [3 x double]* %m2, i64 2, i64 2
  br label %.preheader3

.preheader3:                                      ; preds = %.preheader3, %.preheader4
  %indvars.iv = phi i64 [ 0, %.preheader4 ], [ %indvars.iv.next, %.preheader3 ]
  %9 = getelementptr inbounds [3 x double], [3 x double]* %m1, i64 %indvars.iv, i64 0
  %10 = load double, double* %9, align 8, !tbaa !1
  %11 = load double, double* %0, align 8, !tbaa !1
  %12 = fadd double %10, %11
  %13 = getelementptr inbounds [3 x double], [3 x double]* %m3, i64 %indvars.iv, i64 0
  %14 = load double, double* %13, align 8, !tbaa !1
  %15 = fadd double %14, %12
  store double %15, double* %13, align 8, !tbaa !1
  %16 = load double, double* %9, align 8, !tbaa !1
  %17 = load double, double* %1, align 8, !tbaa !1
  %18 = fadd double %16, %17
  %19 = getelementptr inbounds [3 x double], [3 x double]* %m3, i64 %indvars.iv, i64 1
  %20 = load double, double* %19, align 8, !tbaa !1
  %21 = fadd double %20, %18
  store double %21, double* %19, align 8, !tbaa !1
  %22 = load double, double* %9, align 8, !tbaa !1
  %23 = load double, double* %2, align 8, !tbaa !1
  %24 = fadd double %22, %23
  %25 = getelementptr inbounds [3 x double], [3 x double]* %m3, i64 %indvars.iv, i64 2
  %26 = load double, double* %25, align 8, !tbaa !1
  %27 = fadd double %26, %24
  store double %27, double* %25, align 8, !tbaa !1
  %28 = getelementptr inbounds [3 x double], [3 x double]* %m1, i64 %indvars.iv, i64 1
  %29 = load double, double* %28, align 8, !tbaa !1
  %30 = load double, double* %3, align 8, !tbaa !1
  %31 = fadd double %29, %30
  %32 = fadd double %15, %31
  store double %32, double* %13, align 8, !tbaa !1
  %33 = load double, double* %28, align 8, !tbaa !1
  %34 = load double, double* %4, align 8, !tbaa !1
  %35 = fadd double %33, %34
  %36 = fadd double %21, %35
  store double %36, double* %19, align 8, !tbaa !1
  %37 = load double, double* %28, align 8, !tbaa !1
  %38 = load double, double* %5, align 8, !tbaa !1
  %39 = fadd double %37, %38
  %40 = fadd double %27, %39
  store double %40, double* %25, align 8, !tbaa !1
  %41 = getelementptr inbounds [3 x double], [3 x double]* %m1, i64 %indvars.iv, i64 2
  %42 = load double, double* %41, align 8, !tbaa !1
  %43 = load double, double* %6, align 8, !tbaa !1
  %44 = fadd double %42, %43
  %45 = fadd double %32, %44
  store double %45, double* %13, align 8, !tbaa !1
  %46 = load double, double* %41, align 8, !tbaa !1
  %47 = load double, double* %7, align 8, !tbaa !1
  %48 = fadd double %46, %47
  %49 = fadd double %36, %48
  store double %49, double* %19, align 8, !tbaa !1
  %50 = load double, double* %41, align 8, !tbaa !1
  %51 = load double, double* %8, align 8, !tbaa !1
  %52 = fadd double %50, %51
  %53 = fadd double %40, %52
  store double %53, double* %25, align 8, !tbaa !1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond, label %54, label %.preheader3

; <label>:54                                      ; preds = %.preheader3
  ret void
}

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.1 (tags/RELEASE_371/final)"}
!1 = !{!2, !2, i64 0}
!2 = !{!"double", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C/C++ TBAA"}
